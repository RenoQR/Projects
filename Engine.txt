#Programmed by René Nicolás Quijada Romero

#This code uses various tools Python provides such as lists, functions, loops, etcetera. It makes use of lists to identify interests of the subject and pair them with
#possible attractions in the place they are in. For example, someone who is in vacation in Shanghai, China and is interested in art could have Yuz Museum as recommendation
#for their visit.

#Phone number: 5525404299
#e-mail: rene.nicolas.quijada.romero@gmail.com



#Creates a list with the destinations that are going to be used
destinations = ["Paris, France", "Shanghai, China", "Los Angeles, USA", "So Paulo, Brazil", "Cairo, Egypt"]

#Creates a traveler for testing ['Name', 'Destination', Interests]
test_traveler = ["Erin Wilkes", "Shanghai, China", ["historical site", "art"]]

#Retrieves destination's index from the destinations list
def get_destination_index(destination):
  destination_index = destinations.index(destination)
  return destination_index

#Test of get_destination_index function
#print(get_destination_index("Los Angeles, USA")) <<gives 2>>
#print(get_destination_index("Paris, France")) <<gives 0>>
#print(get_destination_index()) <<gives error>>
#print(get_destination_index("Hyderabad, India")) <<gives error>>

#Function 2: Obtains traveler location
def get_traveler_location(traveler):
  traveler_destination = traveler[1]
  traveler_destination_index = get_destination_index(traveler_destination)
  return traveler_destination_index

#Tests function 2
#test_destination_index = get_traveler_location(test_traveler)

#print(test_destination_index) Gives 1. It first goes through Function 2 and then uses Function 1. 

#Creates a list of attractions through list comprehension. One empty list for each place.
attractions = [[] for destination in destinations]

#Test of the list attractions
# print(attractions)

#Function 3: Adds attractions
def add_attraction(destination, attraction):
  try:
    
    destination_index = get_destination_index(destination)
    attractions_for_destination = attractions[destination_index]
    attractions_for_destination.append(attraction)
    return attractions_for_destination
  
  except ValueError:
    print("Error caught!")
    return 
  
#Adds attractions to the destinations
add_attraction("Los Angeles, USA", ["Venice Beach", ["beach"]])
add_attraction("Paris, France", ["the Louvre", ["art", "museum"]])
add_attraction("Paris, France", ["Arc de Triomphe", ["historical site", "monument"]])
add_attraction("Shanghai, China", ["Yu Garden", ["garden", "historical site"]])
add_attraction("Shanghai, China", ["Yuz Museum", ["art", "museum"]])
add_attraction("Shanghai, China", ["Oriental Pearl Tower", ["skyscraper", "viewing deck"]])
add_attraction("Los Angeles, USA", ["LACMA", ["art", "museum"]])
add_attraction("So Paulo, Brazil", ["So Paulo Zoo", ["zoo"]])
add_attraction("So Paulo, Brazil", ["Ptio do Colgio", ["historical site"]])
add_attraction("Cairo, Egypt", ["Pyramids of Giza", ["monument", "historical site"]])
add_attraction("Cairo, Egypt", ["Egyptian Museum", ["museum"]])


#Test of possible attractions
#print(attractions)

#Function 4: Helps the travler find the interesing places. Matches interests with possible locations
def find_attractions(destination, interests):
  destination_index = get_destination_index(destination)
  attractions_in_the_city = attractions[destination_index]
  attractions_with_interest = []
  for possible_attraction in attractions_in_the_city:
    attraction_tags = possible_attraction[1]
    for interest in interests:
      for tag in attraction_tags:
        if interest == tag:
          attractions_with_interest.append(possible_attraction[0])
  return attractions_with_interest

#Test of function 4 (Returns ["LACMA"])
#la_arts = find_attractions("Los Angeles, USA", ["art"])
#print(la_arts)

#Function 5
def get_attractions_for_traveler(traveler):
  traveler_destination = traveler[1]
  traveler_interests = traveler [2]
  traveler_attractions = find_attractions(traveler_destination, traveler_interests)
  
  for attraction in traveler_attractions:
    interests_string = "Hi " + traveler[0] + ", we think you'll like these places around " + traveler_destination + ": " + str(attraction)
    
  return interests_string

#Final test
subject1 = ['Dereck Smill', 'Paris, France', ['monument']]
smills_france = get_attractions_for_traveler(subject1)

print(smills_france)